{{- if not .Values.useSGXDevPlugin }}
{{- required "A valid '.Values.useSGXDevPlugin' is required: \"enabled\"|\"scone\"|\"azure\"|\"disabled\"" .value }}
{{- else if and (ne .Values.useSGXDevPlugin "enabled") (ne .Values.useSGXDevPlugin "scone") (ne .Values.useSGXDevPlugin "azure") (ne .Values.useSGXDevPlugin "disabled") }}
{{- required "A valid '.Values.useSGXDevPlugin' is required: \"enabled\"|\"scone\"|\"azure\"|\"disabled\"" .value }}
{{- end }}

{{- if and (eq .Values.useSGXDevPlugin "azure") (not .Values.sgxEpcMem) }}
{{- required "Specify '.Values.sgxEpcMem' when using Azure SGX Device Plugin" .value }}
{{- end }}

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "sconify-python-service.fullname" . }}
  labels:
    {{- include "sconify-python-service.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      labels:
        {{- include "sconify-python-service.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: "Never"
      imagePullSecrets:
        - name: regcred
      volumes: 
        - name: volumev1
      {{- if .Values.volumev1.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.volumev1.persistence.existingClaim | default (printf "%s-%s" "volumev1" (include "sconify-python-service.fullname" .)) }}       {{- else }}
          emptyDir: {}
       {{- end }}
      {{- if eq .Values.useSGXDevPlugin "disabled" }}
        - hostPath:
            path: /dev/isgx
          name: dev-isgx
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          {{- if .Values.command }}
          command: {{ .Values.command }}
          {{- end }}
          securityContext:
            {{- if or (eq .Values.useSGXDevPlugin "scone") (eq .Values.useSGXDevPlugin "enabled")}}
            capabilities:
              add: ["SYS_RAWIO"]
            {{- else if (eq .Values.useSGXDevPlugin "disabled") }}
            privileged: true
            {{- end}}
          env:
            {{- if .Values.extraEnvVars }}
            {{- toYaml .Values.extraEnvVars | nindent 12 }}
            {{- end }}
            {{- if .Values.scone.configID }}
            - name: SCONE_CONFIG_ID
              value: {{ .Values.scone.configID }}
              {{- if .Values.scone.cas }}
            - name: SCONE_CAS_ADDR
              value: {{ .Values.scone.cas }}
              {{- end }}
              {{- if .Values.scone.las }}
            - name: SCONE_LAS_ADDR
              value: {{ .Values.scone.las }}
              {{- else }}
            - name: SCONE_LAS_ADDR
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
              {{- end }}
            {{- end }}
            {{- if .Values.scone.allowDlOpen }}
            - name: SCONE_ALLOW_DLOPEN
              value: {{ .Values.scone.allowDlOpen | quote }}
            {{- end }}
            {{- if .Values.scone.heap }}
            - name: SCONE_HEAP
              value: {{ .Values.scone.heap }}
            {{- end }}
            {{- if .Values.scone.stack }}
            - name: SCONE_STACK
              value: {{ .Values.scone.stack }}
            {{- end }}
            {{- if .Values.scone.fork }}
            - name: SCONE_FORK
              value: {{ .Values.scone.fork | quote }}
            {{- end }}
            {{- if .Values.scone.log }}
            - name: SCONE_LOG
              value: {{ .Values.scone.log | quote }}
            {{- end }}
            {{- if .Values.scone.printVersion }}
            - name: SCONE_VERSION
              value: "1"
            {{- end }}
          {{- if or (.Values.resources) (or (or (eq .Values.useSGXDevPlugin "scone") (eq .Values.useSGXDevPlugin "enabled")) (eq .Values.useSGXDevPlugin "azure")) }}
          resources:
            {{- if .Values.resources }}
            {{- toYaml .Values.resources | nindent 12 }}
            {{- end }}
            {{- if or (eq .Values.useSGXDevPlugin "scone") (eq .Values.useSGXDevPlugin "enabled") }}
            limits:
              sgx.k8s.io/sgx: 1
            {{- else if eq .Values.useSGXDevPlugin "azure" }}
            limits:
              kubernetes.azure.com/sgx_epc_mem_in_MiB: {{ .Values.sgxEpcMem }}
            {{- end}}
          {{- end }}
          volumeMounts: 
            - name: volumev1
              mountPath: /V1
            {{- if eq .Values.useSGXDevPlugin "disabled" }}
            - mountPath: /dev/isgx
              name: dev-isgx
            {{- end }}
      {{- if .Values.attestationCheck.enabled }}
      initContainers:
        - name: check-attestation
          image: {{ .Values.attestationCheck.image }}
          imagePullPolicy: IfNotPresent
          {{- if .Values.scone.configID }}
          env:
            {{- if .Values.scone.cas }}
            - name: SCONE_CAS_ADDR
              value: {{ .Values.scone.cas }}
            {{- end }}
            {{- if .Values.scone.las }}
            - name: SCONE_LAS_ADDR
              value: {{ .Values.scone.las }}
            {{- else }}
            - name: SCONE_LAS_ADDR
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            {{- end }}
          {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}